%menu
  %p=link_to "<< Back to project #{@project && @project.name}", project_errors_url(@project)

%h1 Error summary

%p#resolved
  = "This error is marked as #{@error.resolved ? 'resolved' : 'unresolved'}."

- form_for @root_error do |f|
  = hidden_field_tag 'error[resolved]', !@error.resolved
  = f.submit @error.resolved ? 'Unresolved' : 'Resolved'

%dl
  %dt Error
  %dd=h @error.message
  %dt URL
  %dd=link_to @error.url
  %dt Parameters
  %dd
    %pre= @error.params.inspect
  %dt This error has been received on:
  %dd= @error.raised_at
  %dt The last similar error has been received on:
  %dd= @error.last_raised_at

  %dt Environment:
  %dd
    %ul
      - @error.environment.each do |key, val|
        %li="#{key}: #{val}"



  %dt Backtrace:
  %dd
    - @error.backtrace.each do |line|
      = '&nbsp;' * (line.to_s.match(/^ +/).to_a.first || '').length
      = line.to_s
      %br

  %dt Data:
  %dd
    %ul
      - @error.data.each do |key, val|
        %li="#{key}: #{val}"

- unless @error.same_errors.empty?
  %hr
  %h2
    Similar Errors
    ( #{@error.count} )

  %ul
    %li= link_to l(@root_error.raised_at, :format => :long_ordinal), project_error_url(@root_error.project, @root_error)
    - @error.same_errors.each do |same_error|
      %li= link_to l(same_error.raised_at, :format => :long_ordinal), project_error_same_error_url(@root_error.project, @root_error, same_error._id)


%hr
%h2 Comments

- if @error.comments.size < 1
  %p There are no comments on this error
- else
  %ul
    - @error.comments.each do |comment|
      %li
        %h4
          By
          = comment.user_email
          in
          = l(comment.created_at)
        %div
          = simple_format(comment.text)

- form_tag comment_project_error_url(@root_error.project, @root_error) do
  %p
    = text_area_tag :text
  %p
    = submit_tag 'Add a comment'
